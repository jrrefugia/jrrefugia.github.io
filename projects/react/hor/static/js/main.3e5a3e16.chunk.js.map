{"version":3,"sources":["components/Member.js","components/MemberList.js","components/Filter.js","components/FilterForm.js","App.js","components/MemberInfo.js","serviceWorker.js","index.js"],"names":["Member","props","react_default","a","createElement","react_router_dom","to","pathname","_id","page","passChildData","getChildData","officialName","active","status","MemberList","members","map","m","components_Member","Object","assign","key","Filter","options","forEach","option","push","value","niceID","string","letterArr","split","out","prevLetter","i","letter","toUpperCase","titleCaps","id","name","onChange","FilterForm","filters","components_Filter","currentPage","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tableHeaders","visibleFields","apiCall","pagination","totalPages","resultsPerPage","membersData","bind","assertThisInitialized","fetchUrl","data","url","_this2","fetch","then","response","json","results","number_pages","per_page","setState","_loop","index","ctx","includes","sortedObj","temp","filterOptions","hasOwnProperty","match","length","handleChange","event","_this3","inputs","target","closest","querySelectorAll","_loop2","filter","member","prevButton","nextButton","onClick","prevTen","nextTen","className","style","border","components_FilterForm","components_MemberList","Component","memberImages","MemberInfo","trackScrolling","wrappedElement","document","getElementsByTagName","isBottom","removeEventListener","maxVoteResults","currentVoteResults","fetchVotes","setTimeout","addEventListener","memberOutputTemplate","votesOutputTemplate","votesAPICall","params","fetchMemberData","outputTemplate","img","Math","floor","random","alt","maxHeight","src","congresses","congressNum","chamber","position","stateCode","stateDistrict","electionMonth","electionDay","electionYear","ctx2","caucusAffiliations","key2","partyAffiliations","committeeAssignments","committeeName","title","subCommitteeAssignments","subCommitteeName","addresses","streetAddress","addressLocality","addressRegion","postalCode","telephone","skipValue","count","usCongressBio","description","dateStr","date","Date","replace","getUTCMonth","getUTCDate","getUTCFullYear","convertDateStr","endDate","vote","prevState","concat","el","getBoundingClientRect","bottom","window","innerHeight","location","React","Boolean","hostname","routing","react_router","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e5a3e16.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Member(props) {\r\n    return (\r\n\t\t<tr>\r\n\t\t\t<td><Link to={{pathname:\"/projects/react/hor/member/\" + props._id, page:props.page, passChildData:props.getChildData }}>{props.officialName}</Link></td>\r\n\t\t\t<td>{props.active}</td>\r\n\t\t\t<td>{props.status}</td>\r\n\t\t</tr>\r\n    )\r\n}\r\n\r\nexport default Member","import React from \"react\"\r\n\r\nimport Member from \"./Member\"\r\n\r\nfunction MemberList(props) {\r\n    return (\r\n\t\t<tbody>{props.members.map(m => <Member page={props.page} getChildData={props.getChildData} key = {m._id} {...m} />)}</tbody>\t\r\n    )\r\n}\r\n\r\nexport default MemberList","import React from \"react\"\r\n\r\nfunction Filter(props) {\r\n\r\n\tlet options = []\r\n\tprops.options.forEach(option => \r\n\t\toptions.push(<option key={option} value={option}>{option}</option>)\r\n\t)\r\n\r\n\tlet niceID = titleCaps(props.id)\r\n\t\r\n\tfunction titleCaps(string){\r\n\t\tlet letterArr = string.split(\"\")\r\n\t\tlet out = \"\"\r\n\t\tlet prevLetter = \"uppercase\"\r\n\t\tfor(let i in letterArr){\r\n\t\t\tlet letter = letterArr[i]\r\n\t\t\tif(i === \"0\")letter = letter.toUpperCase()\r\n\t\t\tif(prevLetter === \"lowercase\" && letter === letter.toUpperCase())out+= \" \"\r\n\t\t\tprevLetter = letter === letter.toUpperCase() ? \"uppercase\" : \"lowercase\"\r\n\t\t\tout += letter\r\n\t\t}\r\n\t\treturn out\r\n\t}\r\n\t\r\n    return (\r\n\t<div>\r\n\t\t<label>{niceID}: </label>\r\n\t\t<select name={props.id} onChange={props.onChange}>\r\n\t\t\t<option value=\"\">Please Select</option>\r\n\t\t\t{options}\r\n\t\t</select>\r\n\t</div>\t\r\n    )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nimport Filter from './Filter'\r\n\r\nfunction FilterForm(props) {\r\n\tlet filters = []\r\n\tfor(let key in props.filters){\r\n\t\tfilters.push(<Filter key={key} id={key} options={props.filters[key]} onChange={props.onChange} />)\r\n\t}\r\n    return (\t\r\n\t\t<form>\r\n\t\t\t{filters}\r\n\t\t</form>\r\n    )\r\n}\r\n\r\nexport default FilterForm","import React, {Component} from 'react'\r\nimport './App.css'\r\nimport MemberList from './components/MemberList'\r\nimport FilterForm from './components/FilterForm'\r\n\r\nlet currentPage = 0\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmembers: [], //basically this.membersData. changes as filters are applied.\r\n\t\t\ttableHeaders:null, //for use when building the thead of our table. \r\n\t\t\tvisibleFields:[\"officialName\",\"active\",\"status\"], //hard coded list of fields to show for thead. order matters.\r\n\t\t\tfilters:{},\r\n\t\t\tapiCall: 'https://clerkapi.azure-api.net/Members?key=da13cc0dce344b3fa36b500e01602df8',\r\n\t\t\tpagination:{\r\n\t\t\t\ttotalPages:100,\r\n\t\t\t\tresultsPerPage:10\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.membersData = [] //original data with some modifications to which properties we want. used to avoid multiple ajax calls when data is refiltered.\r\n\t\t\r\n\t\tconst bindFx = (fx => fx.forEach(name => this[name] = this[name].bind(this)))\r\n\t\tbindFx([\"handleChange\",\"fetchUrl\",\"getChildData\",\"nextTen\",\"prevTen\"])\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchUrl(this.state.apiCall+ \"&$skip=\" + currentPage * this.state.pagination.resultsPerPage)\r\n\t}\r\n\t\r\n\tgetChildData(data){\r\n\t\tcurrentPage = data\r\n\t}\r\n\t\r\n\tfetchUrl(url){\r\n\t\tfetch(url).then(response => response.json()).then(data => {\t\t\t\r\n\t\t\tthis.membersData = data.results\r\n\t\t\tlet tableHeaders = []\r\n\t\t\tlet filters = {}\r\n\t\t\t\r\n\t\t\tlet pagination = {}\r\n\t\t\tpagination.totalPages = data.pagination.number_pages\r\n\t\t\tpagination.resultsPerPage = data.pagination.per_page\r\n\t\t\tthis.setState({pagination:pagination})\r\n\t\t\t\r\n\t\t\t//sanitize non visible fields but keep _id for use in link. also sort it so that it lines up with what is specified in the visibleFields.\r\n\t\t\tfor(let index in this.membersData){\r\n\t\t\t\tlet ctx = this.membersData[index]\r\n\t\t\t\tfor(let key in ctx){\r\n\t\t\t\t\tif(!this.state.visibleFields.includes(key) && key!==\"_id\"){\r\n\t\t\t\t\t\tdelete ctx[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet sortedObj = {\"_id\":ctx[\"_id\"]}\r\n\t\t\t\tthis.state.visibleFields.forEach(key => \r\n\t\t\t\t\tsortedObj[key] = ctx[key]\r\n\t\t\t\t)\r\n\t\t\t\tthis.membersData[index] = sortedObj\r\n\t\t\t}\r\n\r\n\t\t\t//build table headers based on visibleFields\r\n\t\t\tthis.state.visibleFields.forEach(key => {\r\n\t\t\t\ttableHeaders.push(<th key={key}>{key}</th>)\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t//build  filters. i'm going to iterate through the visible data to get the options for my filters so i don't have to hard code.\r\n\t\t\tfor(let key in this.membersData[0]){\r\n\t\t\t\tlet temp = {} //just using a pojo to ensure i only put values into the filterOptions t hat havent been placed before. this is easier than having to search through filterOptions to find out if that is true or not.\r\n\t\t\t\tlet filterOptions = []\r\n\t\t\t\t\r\n\t\t\t\t//analyze all data\r\n\t\t\t\tfor(let index in this.membersData){\r\n\t\t\t\t\tlet ctx = this.membersData[index][key]\r\n\t\t\t\t\tif(!temp.hasOwnProperty(ctx) && ctx!==\"\"){\r\n\t\t\t\t\t\ttemp[ctx]=\"\"\r\n\t\t\t\t\t\tfilterOptions.push(ctx)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//a filter will be automatically be created for each field. some aren't necessary.\r\n\t\t\t\tif(!key.match(/(date|name|id$)/gi) && filterOptions.length > 1){\r\n\t\t\t\t\tfilters[key] = filterOptions\r\n\t\t\t\t\tfilters[key].onChange = this.handleChange\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({members:this.membersData})\r\n\t\t\tthis.setState({filters:filters})\r\n\t\t\tthis.setState({tableHeaders:tableHeaders})\t\r\n\t\t})\r\n\t}\r\n\t\r\n\thandleChange(event){\r\n\t\tlet inputs = event.target.closest('form').querySelectorAll(\"select\")\r\n\t\tlet membersData = this.membersData\r\n\t\tfor(let index = 0; index < inputs.length; index++){\r\n\t\t\tlet ctx = inputs[index]\r\n\t\t\t//apply filter when the value is not \"\" \r\n\t\t\tfunction test(member){\r\n\t\t\t\tif(ctx.value === \"\"){return true}\r\n\t\t\t\telse{return member[ctx.name] === ctx.value}\r\n\t\t\t}\r\n\t\t\tmembersData = membersData.filter(member => test.call(this,member))\r\n\t\t}\r\n\t\tthis.setState({members:membersData})\r\n\t}\r\n\t\r\n\tprevTen(event){\r\n\t\tcurrentPage--\r\n\t\tthis.fetchUrl(this.state.apiCall+ \"&$skip=\" + currentPage * this.state.pagination.resultsPerPage)\r\n\t}\r\n\t\r\n\tnextTen(event){\r\n\t\tcurrentPage++\r\n\t\tthis.fetchUrl(this.state.apiCall+ \"&$skip=\" + currentPage * this.state.pagination.resultsPerPage)\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet prevButton, nextButton\r\n\t\t\r\n\t\tif(currentPage > 0){\r\n\t\t\tprevButton = <button onClick={this.prevTen} >Prev {this.state.pagination.resultsPerPage} results</button>\r\n\t\t}\r\n\t\tif(currentPage < this.state.pagination.totalPages - 1){\r\n\t\t\tnextButton = <button onClick={this.nextTen} >Next {this.state.pagination.resultsPerPage} results</button>\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>Members</h1>\r\n\t\t\t<div style={{border:\"1px solid #ccc\"}}>Filters: \r\n\t\t\t\t<FilterForm filters = {this.state.filters} onChange={this.handleChange}/>\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t<table>\r\n\t\t\t\t<thead><tr>{this.state.tableHeaders}</tr></thead>\r\n\t\t\t\t<MemberList members = {this.state.members} page={currentPage} getChildData={this.getChildData} />\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t\t{prevButton}\r\n\t\t\t{currentPage+1}\r\n\t\t\t{nextButton}\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport memberImageJSON from '../assets/memberImg.json'\r\n\r\nconst memberImages = memberImageJSON\r\n\r\nclass MemberInfo extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmembersData: [],\r\n\t\t\tmemberOutputTemplate: [],\r\n\t\t\tvotesOutputTemplate: [],\r\n\t\t\tcurrentVoteResults: 10,\r\n\t\t\tmaxVoteResults:100,\r\n\t\t\tvotesAPICall: \"https://clerkapi.azure-api.net/Votes?$filter=superEvent/superEvent/congressNum eq '116' and voteType eq 'YEA-AND-NAY'&key=da13cc0dce344b3fa36b500e01602df8&$skip=\"\r\n\t\t}\r\n\t\t\r\n\t\tthis.params = this.props.match.params\r\n\t\tconst bindFx = (fx => fx.forEach(name => this[name] = this[name].bind(this)))\r\n\t\tbindFx([\"fetchVotes\"])\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchMemberData()\r\n\t\tdocument.addEventListener('scroll', this.trackScrolling);\r\n\t}\r\n\r\n\tfetchMemberData(){\r\n\t\tfetch('https://clerkapi.azure-api.net/Members?$filter=_id%20eq%20%27'+this.params.id+'%27&key=da13cc0dce344b3fa36b500e01602df8').then(response => response.json()).then(data => {\r\n\t\t\tthis.setState({membersData: data.results.filter(member => member._id === this.params.id)[0]})\r\n\t\t\tlet outputTemplate = []\r\n\t\t\t\r\n\t\t\tlet ctx = memberImages[this.params.id]\r\n\t\t\tlet img = memberImages[this.params.id][Math.floor(Math.random()*ctx.length)]\r\n\t\t\t\r\n\t\t\toutputTemplate.push(<div key=\"img\"><img alt={this.state.membersData.officialName + \" image\"} style={{maxHeight:\"400px\"}} className=\"floatRight\" src={img} /></div>)\r\n\t\t\t\r\n\t\t\toutputTemplate.push(<div key=\"status\">Status: {this.state.membersData.status===\"\"?\"Active\":this.state.membersData.status}<br /><br /></div>)\r\n\t\t\t\r\n\t\t\tctx = this.state.membersData.congresses\r\n\t\t\tfor(let key in ctx){\r\n\t\t\t\t\r\n\t\t\t\toutputTemplate.push(<div key={\"congress\"+key}><strong>{ctx[key].congressNum}<sup>th</sup> Congress</strong><br />{ctx[key].chamber} {ctx[key].position}<br />{ctx[key].stateCode} {ctx[key].stateDistrict} District <br />\r\n\t\t\t\tElected: {ctx[key].electionMonth}/{ctx[key].electionDay}/{ctx[key].electionYear}\r\n\t\t\t\t</div>)\r\n\t\t\t\r\n\t\t\t\tlet ctx2 = ctx[key].caucusAffiliations\r\n\t\t\t\tfor(let key2 in ctx2){\r\n\t\t\t\t\toutputTemplate.push(<div key={\"caucus\"+key2}><strong><br />Caucus Affiliations:<br /></strong>{ctx2[key2].name}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].partyAffiliations\r\n\t\t\t\tfor(let key2 in ctx2){\r\n\t\t\t\t\toutputTemplate.push(<div key={\"party\"+key2}><strong><br />Party Affiliations:<br /></strong>{ctx2[key2].name}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].committeeAssignments\r\n\t\t\t\tfor(let key2 in ctx[key].committeeAssignments){\r\n\t\t\t\t\tif(ctx2[key2].committeeName !== \"\"){//why can't this array just be empty?\r\n\t\t\t\t\t\tlet title = key2 > 0 ? [] : [<strong key=\"title\"><br />Committee Assignments:<br /></strong>]\r\n\t\t\t\t\t\toutputTemplate.push(<div key={\"committee\"+key2}>{title}{ctx2[key2].committeeName}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].subCommitteeAssignments\r\n\t\t\t\tfor(let key2 in ctx[key].subCommitteeAssignments){\r\n\t\t\t\t\tlet title = key2 > 0 ? [] : [<strong key=\"title\"><br />Sub-committee Assignments:<br /></strong>]\r\n\t\t\t\t\toutputTemplate.push(<div key={\"subcommittee\"+key2}>{title}{ctx2[key2].subCommitteeName}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tctx = this.state.membersData.addresses\r\n\t\t\tfor(let key in ctx){\r\n\t\t\t\tif(ctx[key].name === \"DCOffice\"){//lets just limit it to the DC office since that seems to be the most complete\r\n\t\t\t\t\toutputTemplate.push(<div key={\"address\"+key}><strong><br />Address:<br /></strong>\r\n\t\t\t\t\t{ctx[key].streetAddress}<br />\r\n\t\t\t\t\t{ctx[key].addressLocality}, {ctx[key].addressRegion} {ctx[key].postalCode}<br />\r\n\t\t\t\t\t{ctx[key].telephone}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({memberOutputTemplate:outputTemplate})\r\n\t\r\n\t\t})\r\n\r\n\t\tthis.fetchVotes(this.state.currentVoteResults)\r\n\t}\t\r\n\t\r\n\tfetchVotes(skipValue){\r\n\t\tfetch(this.state.votesAPICall+skipValue).then(response => response.json()).then(data => {\r\n\t\t\tlet outputTemplate = []\r\n\t\t\tthis.setState({currentVoteResults:(data.pagination.page+1)* data.pagination.per_page,maxVoteResults:data.pagination.count})\r\n\t\t\t\t\r\n\t\t\tif(this.state.currentVoteResults === 20){\r\n\t\t\t\toutputTemplate.push(<h2 key={\"votes\" + this.state.currentVoteResults}>Voting History (scroll down to load more)</h2>)\r\n\t\t\t}\r\n\t\t\tfunction convertDateStr(dateStr){\r\n\t\t\t\tlet date = new Date(dateStr.replace(/\\.000$/gi,\"Z\"))\r\n\t\t\t\treturn date.getUTCMonth()+1 +\"/\"+ date.getUTCDate() +\"/\"+ date.getUTCFullYear()\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tdata.results.forEach(event => {\r\n\t\t\t\tlet ctx = event.members.filter(member=> member.usCongressBio === this.params.id)[0]\r\n\t\t\t\tif(!ctx){return false}\r\n\t\t\t\tlet description = event.description ? [<span key={\"desc\" + this.state.currentVoteResults}>({event.description}).</span>] : []\r\n\t\t\t\toutputTemplate.push(<div key={event._id + this.state.currentVoteResults}>\r\n\t\t\t\t\t<em>{convertDateStr(event.endDate)}</em>: Voted \"<strong>{ctx.vote}</strong>\" {event.name}. {description}<br /><br />\r\n\t\t\t\t</div>)\r\n\t\t\t})\r\n\t\t\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\treturn{\r\n\t\t\t\t\tvotesOutputTemplate:prevState.votesOutputTemplate.concat(outputTemplate)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tisBottom(el) {\r\n\t  return el.getBoundingClientRect().bottom <= window.innerHeight;\r\n\t}\r\n\ttrackScrolling = () => {\r\n\t  const wrappedElement = document.getElementsByTagName('body')[0]\r\n\t  if (this.isBottom(wrappedElement)) {\r\n\t\tdocument.removeEventListener('scroll', this.trackScrolling)\r\n\t\t\r\n\t\t\r\n\t\tif(this.state.maxVoteResults > this.state.currentVoteResults){\r\n\t\tthis.fetchVotes(this.state.currentVoteResults)\r\n\t\tsetTimeout(()=>document.addEventListener('scroll', this.trackScrolling),\"500\")\r\n\t\t}\r\n\t  }\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tconst ctx = this.props.location\r\n\t\tif(ctx.passChildData){\r\n\t\t\tctx.passChildData.call(this,ctx.page)\r\n\t\t}\r\n\t\tdocument.removeEventListener('scroll', this.trackScrolling)\r\n\t}\r\n\r\n\t\r\n\trender() {\r\n\t\treturn <div>\r\n\t\t\t<h1>{this.state.membersData.officialName}</h1>\r\n\t\t\t<div id=\"content\">\r\n\t\t\t{this.state.memberOutputTemplate}\r\n\t\t\t{this.state.votesOutputTemplate}\t\t\t\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t}\r\n}\r\nexport default MemberInfo\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport MemberInfo from './components/MemberInfo';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/projects/react/hor/\" component={App} />\r\n      <Route path=\"/projects/react/hor/member/:id\" component={MemberInfo} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}