{"version":3,"sources":["components/Member.js","components/MemberList.js","components/Filter.js","components/FilterForm.js","App.js","components/MemberInfo.js","serviceWorker.js","index.js"],"names":["Member","props","react_default","a","createElement","react_router_dom","to","_id","officialName","active","status","MemberList","members","map","m","components_Member","Object","assign","key","Filter","options","forEach","option","push","value","niceID","string","letterArr","split","out","prevLetter","i","letter","toUpperCase","titleCaps","id","name","onChange","FilterForm","filters","components_Filter","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tableHeaders","visibleFields","membersData","bind","assertThisInitialized","_this2","fetch","then","response","json","data","results","_loop","index","ctx","includes","sortedObj","temp","filterOptions","hasOwnProperty","match","length","handleChange","setState","event","_this3","inputs","target","closest","querySelectorAll","_loop2","filter","member","prevState","className","style","border","components_FilterForm","components_MemberList","Component","Members","outputTemplate","currentVoteResults","params","fetchMemberData","congresses","congressNum","chamber","position","stateCode","stateDistrict","electionMonth","electionDay","electionYear","ctx2","caucusAffiliations","key2","partyAffiliations","committeeAssignments","committeeName","title","subCommitteeAssignments","subCommitteeName","addresses","streetAddress","addressLocality","addressRegion","postalCode","telephone","console","log","fetchMemberVoteData","url","pagination","page","per_page","usCongressBio","description","dateStr","date","Date","replace","getUTCMonth","getUTCDate","getUTCFullYear","convertDateStr","endDate","vote","concat","React","Boolean","window","location","hostname","routing","react_router","exact","path","component","MemberInfo","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8RAaeA,MAVf,SAAgBC,GACZ,OACFC,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI,WAAaL,EAAMM,KAAMN,EAAMO,eAC7CN,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QACXP,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,UCECC,MANf,SAAoBV,GAChB,OACFC,EAAAC,EAAAC,cAAA,aAAQH,EAAMW,QAAQC,IAAI,SAAAC,GAAC,OAAIZ,EAAAC,EAAAC,cAACW,EAADC,OAAAC,OAAA,CAAQC,IAAOJ,EAAEP,KAASO,QC8B5CK,MAlCf,SAAgBlB,GAEf,IAAImB,EAAU,GACdnB,EAAMmB,QAAQC,QAAQ,SAAAC,GAAM,OAC3BF,EAAQG,KAAKrB,EAAAC,EAAAC,cAAA,UAAQc,IAAKI,EAAQE,MAAOF,GAASA,MAGnD,IAAIG,EAEJ,SAAmBC,GAClB,IAAIC,EAAYD,EAAOE,MAAM,IACzBC,EAAM,GACNC,EAAa,YACjB,IAAI,IAAIC,KAAKJ,EAAU,CACtB,IAAIK,EAASL,EAAUI,GACd,MAANA,IAAUC,EAASA,EAAOC,eACX,cAAfH,GAA8BE,IAAWA,EAAOC,gBAAcJ,GAAM,KACvEC,EAAaE,IAAWA,EAAOC,cAAgB,YAAc,YAC7DJ,GAAOG,EAER,OAAOH,EAbKK,CAAUjC,EAAMkC,IAgB1B,OACHjC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,aAAQqB,EAAR,MACAvB,EAAAC,EAAAC,cAAA,UAAQgC,KAAMnC,EAAMkC,GAAIE,SAAUpC,EAAMoC,UACvCnC,EAAAC,EAAAC,cAAA,UAAQoB,MAAM,IAAd,iBACCJ,KCdWkB,MAZf,SAAoBrC,GACnB,IAAIsC,EAAU,GACd,IAAI,IAAIrB,KAAOjB,EAAMsC,QACpBA,EAAQhB,KAAKrB,EAAAC,EAAAC,cAACoC,EAAD,CAAQtB,IAAKA,EAAKiB,GAAIjB,EAAKE,QAASnB,EAAMsC,QAAQrB,GAAMmB,SAAUpC,EAAMoC,YAEnF,OACFnC,EAAAC,EAAAC,cAAA,YACEmC,ICiGWE,cAtGd,SAAAA,EAAYxC,GAAO,IAAAyC,EAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,KAAAH,IAClBC,EAAA1B,OAAA6B,EAAA,EAAA7B,CAAA4B,KAAA5B,OAAA8B,EAAA,EAAA9B,CAAAyB,GAAAM,KAAAH,KAAM3C,KACD+C,MAAQ,CACZpC,QAAS,GACTqC,aAAa,KACbC,cAAc,CAAC,eAAe,SAAS,UACvCX,QAAQ,IAETG,EAAKS,YAAc,GARD,MAWX,CAAC,gBADiB9B,QAAQ,SAAAe,GAAI,OAAIM,EAAKN,GAAQM,EAAKN,GAAMgB,KAAXpC,OAAAqC,EAAA,EAAArC,CAAA0B,MAVpCA,mFAcC,IAAAY,EAAAV,KACnBW,MAAM,+EAA+EC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GAC3HL,EAAKH,YAAcQ,EAAKC,QACxB,IAAIX,EAAe,GACfV,EAAU,GAHqHsB,EAAA,SAM3HC,GACP,IAAIC,EAAMT,EAAKH,YAAYW,GAC3B,IAAI,IAAI5C,KAAO6C,EACVT,EAAKN,MAAME,cAAcc,SAAS9C,IAAc,QAANA,UACtC6C,EAAI7C,GAGb,IAAI+C,EAAY,CAAC1D,IAAMwD,EAAG,KAC1BT,EAAKN,MAAME,cAAc7B,QAAQ,SAAAH,GAAG,OACnC+C,EAAU/C,GAAO6C,EAAI7C,KAEtBoC,EAAKH,YAAYW,GAASG,GAX3B,IAAI,IAAIH,KAASR,EAAKH,YAAYU,EAA1BC,GAoBR,IAAI,IAAI5C,KALRoC,EAAKN,MAAME,cAAc7B,QAAQ,SAAAH,GAChC+B,EAAa1B,KAAKrB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GAAMA,MAInBoC,EAAKH,YAAY,GAAG,CAClC,IAAIe,EAAO,GACPC,EAAgB,GAGpB,IAAI,IAAIL,KAASR,EAAKH,YAAY,CACjC,IAAIY,EAAMT,EAAKH,YAAYW,GAAO5C,GAC9BgD,EAAKE,eAAeL,IAAc,KAANA,IAC/BG,EAAKH,GAAK,GACVI,EAAc5C,KAAKwC,KAKjB7C,EAAImD,MAAM,sBAAwBF,EAAcG,OAAS,IAC5D/B,EAAQrB,GAAOiD,EACf5B,EAAQrB,GAAKmB,SAAWiB,EAAKiB,cAI/BjB,EAAKkB,SAAS,CAAC5D,QAAQ0C,EAAKH,cAC5BG,EAAKkB,SAAS,CAACjC,QAAQA,IACvBe,EAAKkB,SAAS,CAACvB,aAAaA,2CAIjBwB,GAGZ,IAHkB,IAAAC,EAAA9B,KACd+B,EAASF,EAAMG,OAAOC,QAAQ,QAAQC,iBAAiB,UACvD3B,EAAcP,KAAKO,YAFL4B,EAAA,SAGVjB,GACP,IAAIC,EAAMY,EAAOb,GAMjBX,EAAcA,EAAY6B,OAAO,SAAAC,GAAM,OAJvC,SAAcA,GACb,MAAiB,KAAdlB,EAAIvC,OACKyD,EAAOlB,EAAI3B,QAAU2B,EAAIvC,OAEUuB,KAAK2B,EAAKO,MAPnDnB,EAAQ,EAAGA,EAAQa,EAAOL,OAAQR,IAAQiB,EAA1CjB,GASRlB,KAAK4B,SAAS,SAAAU,GACb,MAAM,CACLtE,QAAQuC,sCAMV,OACAjD,EAAAC,EAAAC,cAAA,OAAK+E,UAAU,OACdjF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAACC,OAAO,mBAApB,WACCnF,EAAAC,EAAAC,cAACkF,EAAD,CAAY/C,QAAWK,KAAKI,MAAMT,QAASF,SAAUO,KAAK2B,gBAG3DrE,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAKwC,KAAKI,MAAMC,eACvB/C,EAAAC,EAAAC,cAACmF,EAAD,CAAY3E,QAAWgC,KAAKI,MAAMpC,mBAjGpB4E,aCuIHC,cAtId,SAAAA,EAAYxF,GAAO,IAAAyC,EAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,KAAA6C,IAClB/C,EAAA1B,OAAA6B,EAAA,EAAA7B,CAAA4B,KAAA5B,OAAA8B,EAAA,EAAA9B,CAAAyE,GAAA1C,KAAAH,KAAM3C,KACD+C,MAAQ,CACZG,YAAa,GACbuC,eAAgB,GAChBC,mBAAoB,GAGrBjD,EAAKkD,OAASlD,EAAKzC,MAAMoE,MAAMuB,OARblD,mFAelBE,KAAKiD,4DAGW,IAAAvC,EAAAV,KAChBW,MAAM,+EAA+EC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GAC3HL,EAAKkB,SAAS,CAACrB,YAAaQ,EAAKC,QAAQoB,OAAO,SAAAC,GAAM,OAAIA,EAAO1E,MAAQ+C,EAAKsC,OAAOzD,KAAI,KACzF,IAAIuD,EAAiB,GAErBA,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAI,UAAT,WAA0D,IAA/BoC,EAAKN,MAAMG,YAAYzC,OAAW,SAAS4C,EAAKN,MAAMG,YAAYzC,OAAOR,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,aAE9H,IAAI2D,EAAMT,EAAKN,MAAMG,YAAY2C,WACjC,IAAI,IAAI5E,KAAO6C,EAAI,CAElB2B,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,WAAWA,GAAKhB,EAAAC,EAAAC,cAAA,cAAS2D,EAAI7C,GAAK6E,YAAY7F,EAAAC,EAAAC,cAAA,iBAA9B,aAA6DF,EAAAC,EAAAC,cAAA,WAAO2D,EAAI7C,GAAK8E,QAAvG,IAAiHjC,EAAI7C,GAAK+E,SAAS/F,EAAAC,EAAAC,cAAA,WAAO2D,EAAI7C,GAAKgF,UAAnJ,IAA+JnC,EAAI7C,GAAKiF,cAAxK,aAAgMjG,EAAAC,EAAAC,cAAA,WAAhM,YACV2D,EAAI7C,GAAKkF,cADC,IACerC,EAAI7C,GAAKmF,YADxB,IACsCtC,EAAI7C,GAAKoF,eAGnE,IAAIC,EAAOxC,EAAI7C,GAAKsF,mBACpB,IAAI,IAAIC,KAAQF,EACfb,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,SAASuF,GAAMvG,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,WAAR,uBAAkCF,EAAAC,EAAAC,cAAA,YAAgBmG,EAAKE,GAAMrE,OAK3G,IAAI,IAAIqE,KADRF,EAAOxC,EAAI7C,GAAKwF,kBAEfhB,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,QAAQuF,GAAMvG,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,WAAR,sBAAiCF,EAAAC,EAAAC,cAAA,YAAgBmG,EAAKE,GAAMrE,OAKzG,IAAI,IAAIqE,KADRF,EAAOxC,EAAI7C,GAAKyF,qBACA5C,EAAI7C,GAAKyF,qBACxB,GAAgC,KAA7BJ,EAAKE,GAAMG,cAAqB,CAClC,IAAIC,EAAQJ,EAAO,EAAI,GAAK,CAACvG,EAAAC,EAAAC,cAAA,UAAQc,IAAI,SAAQhB,EAAAC,EAAAC,cAAA,WAApB,yBAAgDF,EAAAC,EAAAC,cAAA,aAC7EsF,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,YAAYuF,GAAOI,EAAON,EAAKE,GAAMG,gBAMrE,IAAI,IAAIH,KADRF,EAAOxC,EAAI7C,GAAK4F,wBACA/C,EAAI7C,GAAK4F,wBAAwB,CAChD,IAAID,EAAQJ,EAAO,EAAI,GAAK,CAACvG,EAAAC,EAAAC,cAAA,UAAQc,IAAI,SAAQhB,EAAAC,EAAAC,cAAA,WAApB,6BAAoDF,EAAAC,EAAAC,cAAA,aACjFsF,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,eAAeuF,GAAOI,EAAON,EAAKE,GAAMM,oBAOxE,IAAI,IAAI7F,KADR6C,EAAMT,EAAKN,MAAMG,YAAY6D,UAEP,aAAlBjD,EAAI7C,GAAKkB,MACXsD,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAK,UAAUA,GAAKhB,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,WAAR,WAAsBF,EAAAC,EAAAC,cAAA,YAClE2D,EAAI7C,GAAK+F,cAAc/G,EAAAC,EAAAC,cAAA,WACvB2D,EAAI7C,GAAKgG,gBAFU,KAESnD,EAAI7C,GAAKiG,cAFlB,IAEkCpD,EAAI7C,GAAKkG,WAAWlH,EAAAC,EAAAC,cAAA,WACzE2D,EAAI7C,GAAKmG,YAKZC,QAAQC,IAAIjE,EAAKN,MAAMG,aAEvBG,EAAKkB,SAAS,CAACkB,eAAeA,MAG/B9C,KAAK4E,oBAAoB,yPAINC,GAAI,IAAA/C,EAAA9B,KACvBW,MAAMkE,GAAKjE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACjD,IAAI+B,EAAiB,GACrBhB,EAAKF,SAAS,CAACmB,mBAAmBhC,EAAK+D,WAAWC,KAAOhE,EAAK+D,WAAWE,WAEzElC,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,MAAIc,IAAI,SAAR,mBAOpByC,EAAKC,QAAQvC,QAAQ,SAAAoD,GACpB,IAAIV,EAAMU,EAAM7D,QAAQoE,OAAO,SAAAC,GAAM,OAAGA,EAAO4C,gBAAkBnD,EAAKkB,OAAOzD,KAAI,GACjF,IAAI4B,EAAK,OAAO,EAChB,IAAI+D,EAAcrD,EAAMqD,YAAc,CAAC5H,EAAAC,EAAAC,cAAA,QAAMc,IAAI,QAAV,IAAmBuD,EAAMqD,YAAzB,OAAkD,GACzFpC,EAAenE,KAAKrB,EAAAC,EAAAC,cAAA,OAAKc,IAAKuD,EAAMlE,KACnCL,EAAAC,EAAAC,cAAA,UAVF,SAAwB2H,GACvB,IAAIC,EAAO,IAAIC,KAAKF,EAAQG,QAAQ,WAAW,MAC/C,OAAOF,EAAKG,cAAc,EAAG,IAAKH,EAAKI,aAAc,IAAKJ,EAAKK,iBAQzDC,CAAe7D,EAAM8D,UADP,YAC8BrI,EAAAC,EAAAC,cAAA,cAAS2D,EAAIyE,MAD3C,KAC4D/D,EAAMrC,KADlE,KAC0E0F,EAAY5H,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,eAIjHsE,EAAKF,SAAS,SAAAU,GACb,MAAM,CACLQ,eAAeR,EAAUQ,eAAe+C,OAAO/C,yCAkBlD,OAAOxF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,UAAKwC,KAAKI,MAAMG,YAAY3C,cAC5BN,EAAAC,EAAAC,cAAA,WACCwC,KAAKI,MAAM0C,wBA/HOgD,IAAMlD,WCORmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzE,MACvB,2DCVN,IAAM0E,EACJ7I,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAW1G,IACpDvC,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOE,KAAK,iCAAiCC,UAAWC,MAM9DC,IAASC,OAAOP,EAASQ,SAASC,eAAe,SD+G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnG,KAAK,SAAAoG,GACjCA,EAAaC","file":"static/js/main.37fdda61.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Member(props) {\r\n    return (\r\n\t\t<tr>\r\n\t\t\t<td><Link to={\"/member/\" + props._id}>{props.officialName}</Link></td>\r\n\t\t\t<td>{props.active}</td>\r\n\t\t\t<td>{props.status}</td>\r\n\t\t</tr>\r\n    )\r\n}\r\n\r\nexport default Member","import React from \"react\"\r\n\r\nimport Member from \"./Member\"\r\n\r\nfunction MemberList(props) {\r\n    return (\r\n\t\t<tbody>{props.members.map(m => <Member key = {m._id} {...m} />)}</tbody>\t\r\n    )\r\n}\r\n\r\nexport default MemberList","import React from \"react\"\r\n\r\nfunction Filter(props) {\r\n\r\n\tlet options = []\r\n\tprops.options.forEach(option => \r\n\t\toptions.push(<option key={option} value={option}>{option}</option>)\r\n\t)\r\n\r\n\tlet niceID = titleCaps(props.id)\r\n\t\r\n\tfunction titleCaps(string){\r\n\t\tlet letterArr = string.split(\"\")\r\n\t\tlet out = \"\"\r\n\t\tlet prevLetter = \"uppercase\"\r\n\t\tfor(let i in letterArr){\r\n\t\t\tlet letter = letterArr[i]\r\n\t\t\tif(i === \"0\")letter = letter.toUpperCase()\r\n\t\t\tif(prevLetter === \"lowercase\" && letter === letter.toUpperCase())out+= \" \"\r\n\t\t\tprevLetter = letter === letter.toUpperCase() ? \"uppercase\" : \"lowercase\"\r\n\t\t\tout += letter\r\n\t\t}\r\n\t\treturn out\r\n\t}\r\n\t\r\n    return (\r\n\t<div>\r\n\t\t<label>{niceID}: </label>\r\n\t\t<select name={props.id} onChange={props.onChange}>\r\n\t\t\t<option value=\"\">Please Select</option>\r\n\t\t\t{options}\r\n\t\t</select>\r\n\t</div>\t\r\n    )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nimport Filter from './Filter'\r\n\r\nfunction FilterForm(props) {\r\n\tlet filters = []\r\n\tfor(let key in props.filters){\r\n\t\tfilters.push(<Filter key={key} id={key} options={props.filters[key]} onChange={props.onChange} />)\r\n\t}\r\n    return (\t\r\n\t\t<form>\r\n\t\t\t{filters}\r\n\t\t</form>\r\n    )\r\n}\r\n\r\nexport default FilterForm","import React, {Component} from 'react'\r\nimport './App.css'\r\nimport MemberList from './components/MemberList'\r\nimport FilterForm from './components/FilterForm'\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmembers: [], //basically this.membersData. changes as filters are applied.\r\n\t\t\ttableHeaders:null, //for use when building the thead of our table. \r\n\t\t\tvisibleFields:[\"officialName\",\"active\",\"status\"], //hard coded list of fields to show for thead. order matters.\r\n\t\t\tfilters:{}\r\n\t\t}\r\n\t\tthis.membersData = [] //original data with some modifications to which properties we want. used to avoid multiple ajax calls when data is refiltered.\r\n\t\t\r\n\t\tconst bindFx = (fx => fx.forEach(name => this[name] = this[name].bind(this)))\r\n\t\tbindFx([\"handleChange\"])\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://clerkapi.azure-api.net/Members?key=da13cc0dce344b3fa36b500e01602df8').then(response => response.json()).then(data => {\t\t\t\r\n\t\t\tthis.membersData = data.results\r\n\t\t\tlet tableHeaders = []\r\n\t\t\tlet filters = {}\r\n\t\t\t\r\n\t\t\t//sanitize non visible fields but keep _id for use in link. also sort it so that it lines up with what is specified in the visibleFields.\r\n\t\t\tfor(let index in this.membersData){\r\n\t\t\t\tlet ctx = this.membersData[index]\r\n\t\t\t\tfor(let key in ctx){\r\n\t\t\t\t\tif(!this.state.visibleFields.includes(key) && key!==\"_id\"){\r\n\t\t\t\t\t\tdelete ctx[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet sortedObj = {\"_id\":ctx[\"_id\"]}\r\n\t\t\t\tthis.state.visibleFields.forEach(key => \r\n\t\t\t\t\tsortedObj[key] = ctx[key]\r\n\t\t\t\t)\r\n\t\t\t\tthis.membersData[index] = sortedObj\r\n\t\t\t}\r\n\r\n\t\t\t//build table headers based on visibleFields\r\n\t\t\tthis.state.visibleFields.forEach(key => {\r\n\t\t\t\ttableHeaders.push(<th key={key}>{key}</th>)\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t//build  filters. i'm going to iterate through the visible data to get the options for my filters so i don't have to hard code.\r\n\t\t\tfor(let key in this.membersData[0]){\r\n\t\t\t\tlet temp = {} //just using a pojo to ensure i only put values into the filterOptions t hat havent been placed before. this is easier than having to search through filterOptions to find out if that is true or not.\r\n\t\t\t\tlet filterOptions = []\r\n\t\t\t\t\r\n\t\t\t\t//analyze all data\r\n\t\t\t\tfor(let index in this.membersData){\r\n\t\t\t\t\tlet ctx = this.membersData[index][key]\r\n\t\t\t\t\tif(!temp.hasOwnProperty(ctx) && ctx!==\"\"){\r\n\t\t\t\t\t\ttemp[ctx]=\"\"\r\n\t\t\t\t\t\tfilterOptions.push(ctx)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//a filter will be automatically be created for each field. some aren't necessary.\r\n\t\t\t\tif(!key.match(/(date|name|id$)/gi) && filterOptions.length > 1){\r\n\t\t\t\t\tfilters[key] = filterOptions\r\n\t\t\t\t\tfilters[key].onChange = this.handleChange\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({members:this.membersData})\r\n\t\t\tthis.setState({filters:filters})\r\n\t\t\tthis.setState({tableHeaders:tableHeaders})\t\r\n\t\t})\r\n\t}\r\n\t\r\n\thandleChange(event){\r\n\t\tlet inputs = event.target.closest('form').querySelectorAll(\"select\")\r\n\t\tlet membersData = this.membersData\r\n\t\tfor(let index = 0; index < inputs.length; index++){\r\n\t\t\tlet ctx = inputs[index]\r\n\t\t\t//apply filter when the value is not \"\" \r\n\t\t\tfunction test(member){\r\n\t\t\t\tif(ctx.value === \"\"){return true}\r\n\t\t\t\telse{return member[ctx.name] === ctx.value}\r\n\t\t\t}\r\n\t\t\tmembersData = membersData.filter(member => test.call(this,member))\r\n\t\t}\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn{\r\n\t\t\t\tmembers:membersData\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>Members</h1>\r\n\t\t\t<div style={{border:\"1px solid #ccc\"}}>Filters: \r\n\t\t\t\t<FilterForm filters = {this.state.filters} onChange={this.handleChange}/>\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t<table>\r\n\t\t\t\t<thead><tr>{this.state.tableHeaders}</tr></thead>\r\n\t\t\t\t<MemberList members = {this.state.members} />\r\n\t\t\t</table>\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\n\r\n/*\r\nhttps://clerkapi.azure-api.net/Votes?$filter=members/usCongressBio eq 'A000374' and superEvent/superEvent/congressNum eq '116' and voteType eq 'YEA-AND-NAY'&key=da13cc0dce344b3fa36b500e01602df8\r\n*/\r\nclass Members extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmembersData: [],\r\n\t\t\toutputTemplate: [],\r\n\t\t\tcurrentVoteResults: 0\r\n\t\t}\r\n\t\t\r\n\t\tthis.params = this.props.match.params\r\n\t\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchMemberData()\r\n\t}\r\n\r\n\tfetchMemberData(){\r\n\t\tfetch('https://clerkapi.azure-api.net/Members?key=da13cc0dce344b3fa36b500e01602df8').then(response => response.json()).then(data => {\r\n\t\t\tthis.setState({membersData: data.results.filter(member => member._id === this.params.id)[0]})\r\n\t\t\tlet outputTemplate = []\r\n\t\t\t\r\n\t\t\toutputTemplate.push(<div key=\"status\">Status: {this.state.membersData.status==\"\"?\"Active\":this.state.membersData.status}<br /><br /></div>)\r\n\t\t\t\r\n\t\t\tlet ctx = this.state.membersData.congresses\r\n\t\t\tfor(let key in ctx){\r\n\t\t\t\t\r\n\t\t\t\toutputTemplate.push(<div key={\"congress\"+key}><strong>{ctx[key].congressNum}<sup>th</sup> Congress</strong><br />{ctx[key].chamber} {ctx[key].position}<br />{ctx[key].stateCode} {ctx[key].stateDistrict} District <br />\r\n\t\t\t\tElected: {ctx[key].electionMonth}/{ctx[key].electionDay}/{ctx[key].electionYear}\r\n\t\t\t\t</div>)\r\n\t\t\t\r\n\t\t\t\tlet ctx2 = ctx[key].caucusAffiliations\r\n\t\t\t\tfor(let key2 in ctx2){\r\n\t\t\t\t\toutputTemplate.push(<div key={\"caucus\"+key2}><strong><br />Caucus Affiliations:<br /></strong>{ctx2[key2].name}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].partyAffiliations\r\n\t\t\t\tfor(let key2 in ctx2){\r\n\t\t\t\t\toutputTemplate.push(<div key={\"party\"+key2}><strong><br />Party Affiliations:<br /></strong>{ctx2[key2].name}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].committeeAssignments\r\n\t\t\t\tfor(let key2 in ctx[key].committeeAssignments){\r\n\t\t\t\t\tif(ctx2[key2].committeeName !== \"\"){//why can't this array just be empty?\r\n\t\t\t\t\t\tlet title = key2 > 0 ? [] : [<strong key=\"title\"><br />Committee Assignments:<br /></strong>]\r\n\t\t\t\t\t\toutputTemplate.push(<div key={\"committee\"+key2}>{title}{ctx2[key2].committeeName}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx2 = ctx[key].subCommitteeAssignments\r\n\t\t\t\tfor(let key2 in ctx[key].subCommitteeAssignments){\r\n\t\t\t\t\tlet title = key2 > 0 ? [] : [<strong key=\"title\"><br />Sub-committee Assignments:<br /></strong>]\r\n\t\t\t\t\toutputTemplate.push(<div key={\"subcommittee\"+key2}>{title}{ctx2[key2].subCommitteeName}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tctx = this.state.membersData.addresses\r\n\t\t\tfor(let key in ctx){\r\n\t\t\t\tif(ctx[key].name === \"DCOffice\"){//lets just limit it to the DC office since that seems to be the most complete\r\n\t\t\t\t\toutputTemplate.push(<div key={\"address\"+key}><strong><br />Address:<br /></strong>\r\n\t\t\t\t\t{ctx[key].streetAddress}<br />\r\n\t\t\t\t\t{ctx[key].addressLocality}, {ctx[key].addressRegion} {ctx[key].postalCode}<br />\r\n\t\t\t\t\t{ctx[key].telephone}\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tconsole.log(this.state.membersData)\r\n\t\t\r\n\t\t\tthis.setState({outputTemplate:outputTemplate})\r\n\t\r\n\t\t})\r\n\t\tthis.fetchMemberVoteData(\"https://clerkapi.azure-api.net/Votes?$filter=members/usCongressBio eq 'A000374' and superEvent/superEvent/congressNum eq '116' and voteType eq 'YEA-AND-NAY'&key=da13cc0dce344b3fa36b500e01602df8&$skip=0\")\r\n\t}\r\n\t\r\n\t\r\n\tfetchMemberVoteData(url){\r\n\t\tfetch(url).then(response => response.json()).then(data => {\r\n\t\t\tlet outputTemplate = []\r\n\t\t\tthis.setState({currentVoteResults:data.pagination.page * data.pagination.per_page})\r\n\t\t\t\r\n\t\t\toutputTemplate.push(<h2 key=\"votes\">Voting History</h2>)\r\n\t\t\t\r\n\t\t\tfunction convertDateStr(dateStr){\r\n\t\t\t\tlet date = new Date(dateStr.replace(/\\.000$/gi,\"Z\"))\r\n\t\t\t\treturn date.getUTCMonth()+1 +\"/\"+ date.getUTCDate() +\"/\"+ date.getUTCFullYear()\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tdata.results.forEach(event => {\r\n\t\t\t\tlet ctx = event.members.filter(member=> member.usCongressBio === this.params.id)[0]\r\n\t\t\t\tif(!ctx){return false}\r\n\t\t\t\tlet description = event.description ? [<span key=\"desc\">({event.description}).</span>] : []\r\n\t\t\t\toutputTemplate.push(<div key={event._id}>\r\n\t\t\t\t\t<em>{convertDateStr(event.endDate)}</em>: Voted \"<strong>{ctx.vote}</strong>\" {event.name}. {description}<br /><br />\r\n\t\t\t\t</div>)\r\n\t\t\t})\r\n\t\t\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\treturn{\r\n\t\t\t\t\toutputTemplate:prevState.outputTemplate.concat(outputTemplate)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t\r\n\r\n\t\t\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\trender() {\r\n\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn <div>\r\n\t\t\t<h1>{this.state.membersData.officialName}</h1>\r\n\t\t\t<div>\r\n\t\t\t{this.state.outputTemplate}\r\n\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t}\r\n}\r\nexport default Members\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport MemberInfo from './components/MemberInfo';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/projects/react/hor/\" component={App} />\r\n      <Route path=\"/projects/react/hor/member/:id\" component={MemberInfo} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}